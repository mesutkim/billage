<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
"-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="reviewMapper">


	<resultMap id="reviewResultSet" type="review">
		<result column="REVIEW_NO"      property="reviewNo" />
		<result column="USER_NO"		property="userNo" />
		<result column="REVIEW_STAR"	property="reviewStar" />
		<result column="REVIEW_TITLE"	property="reviewTitle" />
		<result column="REVIEW_CONTENT"	property="reviewContent" />
		<result column="CREATE_DATE"	property="createDate" />
		<result column="COUNT"		    property="count" />
		<result column="REVIEW_STATUS"	property="reviewStatus" />
		<result column="BOOK_TITLE" 	property="bookTitle" />
		<result column="BOOK_AUTHOR"	property="bookAuthor" />
		<result column="BOOK_GENRE"		property="bookGenre" />
		<result column="BOOK_IMAG"		property="bookImag" />
		<result column="BOOK_POINT"  	property="bookPoint" />
		<result column="BOOK_NO"	    property="bookNo" />
		<result column="BOOK_PUBLISHER"	    property="bookPublisher" />
	</resultMap>

	<resultMap id="bookResultSet" type="book">
		<result column="BOOK_NAME"      property="bookName" />
		<result column="ISBN"		    property="isbn" />
	</resultMap>


		
	<resultMap type="point" id="pointResultset">
		<result column="USER_NO"      property="userNo"/>
		<result column="POINT_ADD"    property="pointAdd"/>
		<result column="POINT_DATE"   property="pointDate"/>
		<result column="POINT_STATUS" property="pointStatus"/>
	</resultMap>
	
	<resultMap type="reviewReply" id="reviewReplyResultset">
		<result column="REPLY_NO"      property="replyNo"/>
		<result column="USER_NO"       property="userNo"/>
		<result column="REVIEW_NO"     property="reviewNo"/>
		<result column="CREATE_DATE"   property="createDate"/>
		<result column="REPLY_CONTENT" property="replyContent"/>
		<result column="DELETE_STATUS" property="deleteStatus"/>
		<result column="USER_ID"       property="userId"/>
	</resultMap>
	
	<resultMap type="reviewLike" id="reviewLikeResultset">
		<result column="REVIEW_NO" property="reviewNo"/>
		<result column="USER_NO"   property="userNo"/>
	</resultMap>
	
	


	<!-- ISBN 조회 -->
	<select id="selectIsbn" parameterType="book" resultMap="bookResultSet">
		SELECT
		      ISBN
		  FROM 
		      BOOK
		 WHERE
		      BOOK_NAME = #{bookName}
	</select>
	
	
	<!-- 리뷰 게시글의 총 개수 조회(모든 행 조회) -->
	<select id="selectListCount" resultType="_int">
		select
		       count(*)
		  from
		       review
		 where
		       review_status = 'N'  
	</select>
	
	<!-- 게시글 리스트 조회 쿼리문 	// 여기 수정*** selectList -> reviewBoardList -->
	<select id="reviewBoardList" resultMap="reviewResultSet">
		select
		        review_no
		       ,nickname
		       ,user_no
		       ,review_star
		       ,book_imag
		       ,book_title
		       ,review_content
		       ,count
		       ,to_char(create_date, 'YYYY-MM-DD') as "create_date"
		  from
		       review
		  join
		       member using(user_no)
		 where
		       review_status = 'N'
		 order
		    by
		      review_no desc
	</select>
	
	
	
	
	<!-- 글작성 쿼리문. 1) 책 중복되는지 확인 select : bookTitle로 조회 => 한 행이 있는지 없는지 -->
	<select id="selectBookTitle" parameterType="review" resultMap="reviewResultSet">
       select
              book_title
         from
              review
        where
              book_title = #{bookTitle}	
          and
              user_no = #{userNo}
          and
           	  review_status = 'N'
	</select>
	
		
	<!-- 글작성 쿼리문. 2) 중복 된 책 없으면 insert : 글작성 -->
	<insert id="insertReviewBoard" parameterType="review">
	<!-- point랑 어케 연결 못하나 못해서 따로 감
	INSERT ALL
		  INTO
		      review(
		              REVIEW_NO
		             ,USER_NO
		             ,REVIEW_STAR
		             ,REVIEW_CONTENT
		             ,REVIEW_STATUS
		             ,BOOK_TITLE
		             ,BOOK_IMAG
		             ,BOOK_POINT
		             ,BOOK_PUBLISHER
		             ,BOOK_AUTHOR
		             )
		      VALUES(
			          SEQ_RNO.NEXTVAL
			         ,#{userNo}
			         ,#{reviewStar}
			         ,#{reviewContent}
			         ,'N'
			         ,#{bookTitle}
			         ,#{bookImag} 
			         ,10
			         ,#{bookPublisher}
			         ,#{bookAuthor}
		             )
		  INTO 
		       point(
		              user_no
		              ,POINT_ADD
		              ,POINT_STATUS
		              )
			  VALUES(
			          ,#{userNo}
			          ,10
			          ,'적립'
			          )
		select *
		  from 
		       dual
	-->
	
		INSERT 
		  INTO 
		       REVIEW
		       (
		        REVIEW_NO
		       ,USER_NO
		       ,REVIEW_STAR
		       ,REVIEW_CONTENT
		       ,REVIEW_STATUS
		       ,BOOK_TITLE
		       ,BOOK_IMAG
		       ,BOOK_POINT
		       ,BOOK_PUBLISHER
		       ,BOOK_AUTHOR
		       
		       )
		values
		       (
		        SEQ_RNO.NEXTVAL
		       ,#{userNo}
		       ,#{reviewStar}
		       ,#{reviewContent}
		       ,'N'
		       ,#{bookTitle}
		       ,#{bookImag} 
		       ,10
		       ,#{bookPublisher}
		       ,#{bookAuthor}
		       )
	</insert>
	
	
	<!-- 글 조회시, 조회수 증가 쿼리문 -->
	<update id="increaseReviewCount" parameterType="_int">
		update
		       review
		   set
		       count = count + 1
		 where
		       review_no = #{ reviewNo }
		   and
		       review_status = 'N'
	</update>
		
	
	<!--  리뷰게시판. 조회 성공 시 => db에서 데이터를 가져와야한다. -->
	<select id="selectReviewBoard" resultType="review" resultMap="reviewResultSet">
		select
			    review_no
		       ,book_title
		       ,book_author
		       ,book_publisher
		       ,count 
		       ,to_char(create_date, 'YYYY-MM-DD') as "CREATE_DATE"
		       ,book_imag
		       ,review_star
		       ,review_content
		       ,book_point
		       ,user_no
		  from
		       review
		 where
		 	   review_status = 'N'
		   and
		       review_no = #{ reviewNo }
	</select>	
	
	
	<!-- 리뷰 삭제 쿼리문 / 원래 reviewNo로 받았을 떈 parameterType는 _int를 받았음-->
	<update id="deleteReviewBoard" parameterType="review">
		update
		       review
		   set
		       review_status = 'Y'
		where
		       review_no = #{ reviewNo }
	</update>
	
	
	
	<!-- 글 수정 쿼리문. 1) 책 중복되는지 확인(리뷰넘버로 책제목조회) -->
	<select id="selectBookTitle2" parameterType="review" resultMap="reviewResultSet">
       select
              book_title
             ,review_no 
         from
              review
        where
              review_no = #{reviewNo}
          and
              user_no = #{userNo}
          and
           	  review_status = 'N'
	</select>	
	
	
	<!-- 글 수정 쿼리문 -->
	<update id="updateReviewBoard" parameterType="review">
		update
		       review
		   set
		        book_title = #{ bookTitle }
               ,book_author = #{ bookAuthor }
               ,book_publisher = #{ bookPublisher }
               ,book_imag = #{ bookImag }
               ,review_star = #{ reviewStar }
               ,review_content = #{ reviewContent }
		  where
		        review_no = #{ reviewNo }
	</update>
	
	
	
	<!-- 댓글 list 불러오는 쿼리문 -->
	<select id="selectReviewReplyList" parameterType="_int" resultMap="reviewReplyResultset">
		select
				review_no
		       ,reply_no
		       ,user_no
		       ,user_id
		       ,create_date
		       ,reply_content
		  from
		   	    review_reply
		  join
		        member using(user_no)
		 where
		        review_no = #{ reviewNo }
		   and
		        delete_status = 'N'
		 order
		    by
		       create_date desc
	</select>
	
	
	<!-- 댓글 삭제  -->
	<update id="deleteReviewReply"  parameterType="ReviewReply">
		update
		       review_reply
		   set
		       delete_status = 'Y'
	     where
	           reply_no = #{ replyNo }
	</update>
	
	
	
	<!--  댓글 수정 -->
	<update id="updateReviewReply" parameterType="ReviewReply">
		update
		       reviewReply
		   set
		       reply_content = #{ replyContent }
		 where
		       delete_status = 'N'
		   and
		       reply_no = #{ replyNo } 
	</update>
	
	
	<!-- 댓글 등록 -->
	<insert id="insertReviewReply" parameterType="ReviewReply">
		INSERT 
		  INTO 
		       REVIEW_REPLY
		       (
		        REPLY_NO
		       ,USER_NO
		       ,REVIEW_NO
		       ,CREATE_DATE
		       ,REPLY_CONTENT
		       )
		values
		       (
		        SEQ_RRENO.NEXTVAL
		       ,#{userNo}
		       ,#{reviewNo}
		       ,SYSDATE
		       ,#{replyContent}
		       )
	</insert>
	
	
	
	
	<!-- 좋아요 누르면 insert  -->
	<insert id="insertReviewLike" parameterType="ReviewLike">
		insert
		  into
		       review_like
		       (
		        review_no
		       ,user_no
		       )
		values
		      (
		       #{reviewNo}
		      ,#{userNo}
		      )		   
	</insert>
	
	
</mapper>
